repeat task.wait() until game:IsLoaded()

local Library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Subs = Library.subs
local IsOpen = Subs.Wait

local mainMenuPlaceID = 5956785391

local DailySpinEnabled = false
local ClanSpinEnabled = false


local legendaryClans = {"Shinazugawa", "Kocho", "Sabito", "Tamayo", "Kuwajima", "Makamo"}
local mythicClans = {"Tomioka", "Tokito", "Hashibira", "Soyama"}
local supremeClans = {"Kamado", "Agatsuma", "Rengoku", "Uzui"}

local huntLegendary = false  
local huntMythic = false  
local huntSupreme = false

local function getFilteredClans()
    local targetClans = {}
    if huntLegendary then
        for _, clan in ipairs(legendaryClans) do
            table.insert(targetClans, clan)
        end
    end
    if huntMythic then
        for _, clan in ipairs(mythicClans) do
            table.insert(targetClans, clan)
        end
    end
    if huntSupreme then
        for _, clan in ipairs(supremeClans) do
            table.insert(targetClans, clan)
        end
    end
    return targetClans
end

local function autoSpinClan()
    task.spawn(function()
        local players = game:GetService("Players")
        local replicatedStorage = game:GetService("ReplicatedStorage")

        local localPlayer = players.LocalPlayer
        local playerData = replicatedStorage:WaitForChild("Player_Data")
        local localData = playerData:WaitForChild(localPlayer.Name)
        local clan = localData:FindFirstChild("Clan")

        local remotes = replicatedStorage:WaitForChild("Remotes")
        local sendServer = remotes:WaitForChild("To_Server")
        local handleSpin = sendServer:WaitForChild("Handle_Initiate_S_")

        handleSpin:InvokeServer("check_can_spin")
        task.wait(1)

        while ClanSpinEnabled do
            local targetClans = getFilteredClans()

            if clan and table.find(targetClans, clan.Value) then
                ClanSpinEnabled = false
                break
            else
                handleSpin:InvokeServer("check_can_spin")
            end
        end
    end)
end

local function autoSpinAndClaim()
    task.spawn(function()
        while DailySpinEnabled do
            local player = game.Players.LocalPlayer
            local spinsFolder = player:FindFirstChild("daily_spins_folder")
            local remote = game.ReplicatedStorage:FindFirstChild("spins_thing_remote")

            if spinsFolder and remote then
                local dailySpins = spinsFolder:FindFirstChild("SpinsToday")
                if dailySpins and dailySpins.Value > 0 then
                    remote:InvokeServer()
                else
                    DailySpinEnabled = false
                end
            end
        end
    end)
end


if game.PlaceId == mainMenuPlaceID then
    local MainWindow = Library:CreateWindow({
        Name = "HackerLor | TksMyWife",
        Themeable = {
            Info = "VTrungHackerLor",
            Credit = false,
            Background = "",
            Visible = true
        }
    })

    local DailyTab = MainWindow:CreateTab("Main")

    -- Section Daily Spin
    local DailySection = DailyTab:CreateSection({Name = "Spin", Side = "Left"})
    DailySection:AddToggle({
        Name = "Auto Daily Spin",
        Flag = "AutoDailySpin",
        Callback = function(state)
            DailySpinEnabled = state
            if state then
                autoSpinAndClaim()
            end
        end
    })

	DailySection:AddToggle({ 
		Name = "Auto Spin Clan",
		Flag = "AutoSpinClan",
		Callback = function(state)
			-- Kiểm tra nếu ít nhất một trong ba toggle săn clan được bật
			if state and (huntLegendary or huntMythic or huntSupreme) then
				ClanSpinEnabled = true
				autoSpinClan()
			else
				ClanSpinEnabled = false
			end
		end
	})

local ClanChooseSection = DailyTab:CreateSection({Name = "TròChơiNhânPhẩm", Side = "Right"})

ClanChooseSection:AddToggle({
    Name = "Săn Legendary Clan",
    Flag = "HuntLegendary",
    Callback = function(state)
        huntLegendary = state
    end,
    State = false  
})

ClanChooseSection:AddToggle({
    Name = "Săn Mythic Clan",
    Flag = "HuntMythic",
    Callback = function(state)
        huntMythic = state
    end,
    State = false  
})

ClanChooseSection:AddToggle({
    Name = "Săn Supreme Clan",
    Flag = "HuntSupreme",
    Callback = function(state)
        huntSupreme = state
    end,
    State = false
})
end
--// Variables \\--
local plr = game:GetService("Players").LocalPlayer

local function updateCharacterReferences(character)
	local hrp = character:WaitForChild("HumanoidRootPart")
		_G.Character = character
		_G.HumanoidRootPart = hrp
end
	if plr.Character then
		updateCharacterReferences(plr.Character)
	end
	plr.CharacterAdded:Connect(function(character)
    updateCharacterReferences(character)
end)

local insert = table.insert 
local character = plr.Character
local PlrHumanoidRootPart = character:WaitForChild("HumanoidRootPart")

local plr = game.Players.LocalPlayer
local Character = plr.Character or plr.CharacterAdded:Wait()	
local Humanoid = Character and Character:WaitForChild("Humanoid")
local WalkSpeed = 150
local JumpPower = 150

plr.CharacterAdded:Connect(function(Char)
    Character = Char
    Humanoid = Character:WaitForChild("Humanoid")

    -- Cập nhật tốc độ và sức bật ngay khi nhân vật xuất hiện
    if WalkSpeed then
        Humanoid.WalkSpeed = WalkSpeed
    end
    if JumpPower then
        Humanoid.JumpPower = JumpPower
    end
end)

game:GetService("RunService").Stepped:Connect(function()
    if Character and Humanoid then
        -- Giữ tốc độ chạy cố định
        if Humanoid.WalkSpeed ~= WalkSpeed then
            Humanoid.WalkSpeed = WalkSpeed
        end
        
        -- Giữ sức bật cố định
        if Humanoid.JumpPower ~= JumpPower then
            Humanoid.JumpPower = JumpPower
        end
    end
end)

plr.CharacterAdded:Connect(function(Char)
    Character = Char
    Humanoid = Character:WaitForChild("Humanoid")

    -- Đặt lại tốc độ ngay lập tức
    task.wait(0.1) -- Chờ game cập nhật xong
    Humanoid.WalkSpeed = WalkSpeed
    Humanoid.JumpPower = JumpPower
end)

local AtBoss = false
local SkillCooldowns = {}
local SelectedSkills = {"Z", "X", "C", "V"} -- Danh sách kỹ năng hợp lệ
local skill = SelectedSkills[1] -- Lấy kỹ năng đầu tiên

function GetCooldownTime(skill)
    -- Giả lập dữ liệu hồi chiêu
    local cooldowns = {Z = 5, X = 5, C = 5, V = 5, B = 5, N = 5}
    return cooldowns[skill] or nil
end


local function UseSkill(skill)
    if IsSkillReady(skill) then
        VirtualInputManager:SendKeyEvent(true, skill, false, game)
        SkillCooldowns[skill] = tick() -- Lưu thời gian sử dụng skill
    end
end


local function IsSkillReady(skill)
    local lastUsed = SkillCooldowns[skill] or 0
    local cooldownTime = GetCooldownTime(skill) -- Hàm giả định lấy thời gian hồi chiêu của skill
    return (tick() - lastUsed) >= cooldownTime
end

local VirtualInputManager = game:GetService("VirtualInputManager")
local AutoSkillEnabled = false -- Biến điều khiển Auto Skill
local SkillStates = {
    Z = false,
    X = false,
    C = false,
    V = false,
    B = false,
    N = false
}


if not VirtualInputManager or not VirtualInputManager.SendKeyEvent then
    error("❌ VirtualInputManager không hỗ trợ SendKeyEvent! Không thể tiếp tục.")
end

-- Hàm dùng kỹ năng
local function UseSkill(skillKey)
    local keycode = Enum.KeyCode[skillKey]
    -- Nhấn phím
    VirtualInputManager:SendKeyEvent(true, keycode, false, game)
    task.wait(0.2) -- Chờ một chút
    -- Nhả phím
    VirtualInputManager:SendKeyEvent(false, keycode, false, game)
end


-- Hàm chạy Auto Skill
local function AutoSkillLoop()
    while AutoSkillEnabled do
        if AtBoss then -- Chỉ dùng kỹ năng khi đã đến gần boss
            local skillUsed = false

            for _, skill in ipairs({"Z", "X", "C", "V", "B", "N"}) do
                if AutoSkillEnabled and SkillStates[skill] then
                    if IsSkillReady(skill) then 
                        UseSkill(skill)
                        skillUsed = true
                    end
                end
            end
            
            if skillUsed then
                task.wait(0.5)
            else
                task.wait(0.1) 
            end
        else
            task.wait(0.1) -- Đợi tiếp nếu chưa tới boss
        end
    end
end


---Flower----
local RunService = game:GetService("RunService");
local Players = game:GetService("Players");
local Player = Players.LocalPlayer;
local chr = Player.Character
local root = chr and chr:FindFirstChild("HumanoidRootPart")

local AutoCollectLilys = false
local NextFrame = RunService.Heartbeat;


local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remotes = ReplicatedStorage:WaitForChild("Remotes")
local DrumRemote = Remotes:WaitForChild("war_Drums_remote")
local Map = Workspace:WaitForChild("Map")




local activeToggle = nil
local toggles = {}

--// Tween \\--
local function GetDistance(Endpoint)
    if typeof(Endpoint) == "Instance" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
    elseif typeof(Endpoint) == "CFrame" then
        Endpoint = Vector3.new(Endpoint.Position.X, game.Players.LocalPlayer.Character.HumanoidRootPart.Position.Y, Endpoint.Position.Z)
    end
    local Magnitude = (Endpoint - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
    return Magnitude
end

function Tween(Endpoint)
  if typeof(Endpoint) == "Instance" then
        Endpoint = Endpoint.CFrame
    end
    local TweenFunc = {}
    local Distance = GetDistance(Endpoint)
    local TweenInfo = TweenInfo.new(Distance / getgenv().tweenspeed, Enum.EasingStyle.Linear)

    local targetCFrame = Endpoint

    -- Giữ nguyên hướng nhìn khi ở chế độ "Above" hoặc "Below"
    if FarmMethod == "Above" then
        targetCFrame = CFrame.new(Endpoint.Position) * CFrame.Angles(math.rad(-90), 0, 0)
    elseif FarmMethod == "Below" then
        targetCFrame = CFrame.new(Endpoint.Position) * CFrame.Angles(math.rad(90), 0, 0)
    end

    local TweenObj = game:GetService("TweenService"):Create(
        game.Players.LocalPlayer.Character.HumanoidRootPart, 
        TweenInfo, 
        { CFrame = targetCFrame }
    )
    TweenObj:Play()

    function TweenFunc:Cancel()
        TweenObj:Cancel()
        return false
    end

    if Distance <= 100 then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = targetCFrame
        TweenObj:Cancel()
        return false
    end

    return TweenFunc
end

local function EnableAntiFall()
    local plr = game.Players.LocalPlayer
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local humanoidRootPart = plr.Character.HumanoidRootPart
    if not humanoidRootPart:FindFirstChild("BodyVelocity") then
        local antifall = Instance.new("BodyVelocity")
        antifall.Velocity = Vector3.new(0, 0, 0)
        antifall.MaxForce = Vector3.new(9e9, 9e9, 9e9)
        antifall.Name = "BodyVelocity"
        antifall.Parent = humanoidRootPart
    end
end

local function DisableAntiFall()
    local plr = game.Players.LocalPlayer
    if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    local humanoidRootPart = plr.Character.HumanoidRootPart
    local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
    local antifall = humanoidRootPart:FindFirstChild("BodyVelocity")

    -- Xóa lực AntiFall nếu tồn tại
    if antifall then
        antifall:Destroy()
        task.wait(0.1) -- Chờ một chút để chắc chắn rằng BodyVelocity đã bị xóa
    end

    -- Đặt lại vận tốc để tránh bị giữ lại bởi lực cũ
    humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
    humanoidRootPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)

    -- Đảm bảo nhân vật có thể di chuyển
    if humanoid then
        humanoid.PlatformStand = false  -- Ngăn trạng thái đứng yên cứng
        humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)  -- Đưa nhân vật về trạng thái bình thường
        task.wait(0.1)  -- Chờ một chút để trạng thái được cập nhật

        -- Nhảy ngay lập tức để kiểm tra xem có bị khóa không
        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    end
end


--// Get Closest \\---
function IsEntitySelected(entity, selectedEntities)
    for _, selectedEntity in ipairs(selectedEntities) do
        if entity.Name == selectedEntity then
            return true
        end
    end
    return false
end



function getclosest(selectedEntities, parentFolder)
    local closestEntity = nil
    local closestDistance = math.huge

    local entities = parentFolder:GetDescendants()

    for i, entity in ipairs(entities) do
        if entity:IsA("Model") and IsEntitySelected(entity, selectedEntities) then
            local entityName = entity.Name
            local humanoid = entity:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
                local entityCFrame = entity:GetModelCFrame()
                local distance = (entityCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestEntity = entity
                end
            end
        end
    end

    return closestEntity
end


--// Tables \\--
local AllowedBosses = {
    "Snow Trainee",
    "Sound Trainee",
    "Akaze",
    "Douma",
    "Enme",
    "Renpeke",
    "Muichiro Tokito",
    "Tengen",
    "Rengoku",
    "Inosuke",
    "Swampy",
    "Shiron",
    "Zanegutsu Kuuchie",
    "Sabito",
    "Sanemi",
    "Nezuko",
    "Giyu",
    "Slasher",
    "Susamaru",
    "Yahaba",
	"Bandit Kaden",
	"Nomay Bandit Boss",
	"Wop1",
	"Wop2",
	
}

local BossLocationsMap1 = {
    { Name = "Shiron", Position = Vector3.new(3228.2385, 380, -3978.56933) },
    { Name = "Giyu", Position = Vector3.new(3010.59, 316.95, -2924.11) },
    { Name = "Nezuko", Position = Vector3.new(3556.5, 342.21, -4565.22) },
    { Name = "Slasher", Position = Vector3.new(4365.71, 342.21, -4438.91) },
    { Name = "Sanemi", Position = Vector3.new(1654, 348.46, -3737.69) },
    { Name = "Yahaba", Position = Vector3.new(1409.45, 315.9, -4647.8) },
    { Name = "Susamaru", Position = Vector3.new(1367.45, 315.9, -4553.09) },
    { Name = "Bandit Kaden", Position = Vector3.new(-546.917, 304.467, -2860.067) },
    { Name = "Zanegutsu Kuuchie", Position = Vector3.new(-351.28, 445.36, -2331.425) },
    { Name = "Sabito", Position = Vector3.new(1237.92, 275.42, -2807.998) }
}

local BossLocationsMap2 = {
    { Name = "Akeza", Position = Vector3.new(2006.46, 566, -130.2) },
    { Name = "Inosuke", Position = Vector3.new(1592.34, 299.98, -388.1) },
    { Name = "Enme", Position = Vector3.new(1591.18, 495.61, -685.5775) },
	{ Name = "Wop1", Position = Vector3.new(-278.02, 601.28, -602.12) },
    { Name = "Renpeke", Position = Vector3.new(-1265, 600.57, -659.554) },
    { Name = "Swampy", Position = Vector3.new(-1364.28, 600.96875, -223.2) },
    { Name = "Sound Trainee", Position = Vector3.new(1881.34, 675.42, -2800.46) },
    { Name = "Tengen", Position = Vector3.new(1460.45, 486.122, -3137.05) },
    { Name = "Snow Trainee", Position = Vector3.new(255.18, 530.94, -2989.45) },
    { Name = "Douma", Position = Vector3.new(-0.146, 512.331, -1674.79) },
    { Name = "Muichiro Tokito", Position = Vector3.new(4513.83, 672.41, -559.748) },
    { Name = "Rengoku", Position = Vector3.new(3654.3999, 672.91, -348.877) },
    { Name = "Slasher", Position = Vector3.new(908.402, 487.295, -1351.5653) },
	{ Name = "Nomay Bandit Boss", Position = Vector3.new(3467.59399, 673.1099, -1882.6058) },
	{ Name = "Wop2", Position = Vector3.new(3541.91, 673.11, -2145.45) }

}

local Map1 = {
    ["Kiribating Village"] = CFrame.new(120, 282, -1743),
    ["Zapiwara Cave"] = CFrame.new(-38, 275, -2403),
    ["Ushumaro Village"] = CFrame.new(-90, 354, -3170),
    ["Butterfly Mansion"] = CFrame.new(3001, 316, -3806),
    ["Final Selection"] = CFrame.new(5258, 365, -2422),
    ["Zapiwara Mountain"] = CFrame.new(-366, 425, -2371),
    ["Wind Trainer"] = CFrame.new(1797, 334, -3466),
    ["Kabiwaru Village"] = CFrame.new(2015, 315, -3051),
    ["Waroru Cave"] = CFrame.new(689, 261, -2469),
    ["Ouwbayashi Home"] = CFrame.new(1241, 320, -4568),
    ["Dangerous Woods"] = CFrame.new(3839, 342, -4177)
}

local Map2 = {
    ["Nomay Village"] = CFrame.new(3562, 673, -2109),
    ["Mugen Train Station"] = CFrame.new(783, 495, 900),
    ["Wop City"] = CFrame.new(-31, 599, -431),
    ["Village 2"] = CFrame.new(1215, 567, 95),
    ["Cave 1"] = CFrame.new(4252, 671, 581),
    ["Cave 2"] = CFrame.new(1182, 485, -1192),
    ["Mist trainer location"] = CFrame.new(4324, 671, -569),
    ["Akeza Cave"] = CFrame.new(1902, 554, -150),
    ["Frozen Lake"] = CFrame.new(2049, 481, -769),
    ["Beast Cave"] = CFrame.new(1840, 481, 37),
    ["Wop's training grounds"] = CFrame.new(223, 595, 483),
    ["Snowy Place"] = CFrame.new(379, 531, -2865),
    ["Devourers Jaw"] = CFrame.new(480, 507, -1864),
    ["Sound Cave"] = CFrame.new(1828, 487, -2770)
}


local SelectedMap = nil -- Mặc định không có Map nào được chọn
local LocationsDropdown, BossesDropdown -- Lưu Dropdown để cập nhật danh sách
local Map1List, Map2List, BossesMap1List, BossesMap2List = {}, {}, {}, {}
local LocationsToUse, BossesToUse = {}, {}
local ActiveBossLocations = {}

-- Điền danh sách địa điểm & Boss CHỈ MỘT LẦN
for name, _ in pairs(Map1) do
    table.insert(Map1List, name)
end
for name, _ in pairs(Map2) do
    table.insert(Map2List, name)
end
for name, _ in pairs(BossLocationsMap1) do
    table.insert(BossesMap1List, name)
end
for name, _ in pairs(BossLocationsMap2) do
    table.insert(BossesMap2List, name)
end


local raceTable = {
    [1] = "Human",
    [2] = "Slayer",
    [3] = "Demon",
    [4] = "Hybrid"
}

local Bosses = {}
local mobs = {}

local GodModes = {
	"scythe_asteroid_reap",
	"ice_demon_art_bodhisatva",
	"akaza_bda_compass_needle",
    "dream_bda_flesh_monster",
    "swamp_bda_swamp_domain",
	"blood_burst_explosive_choke_slam",
    "Water_Surface_Slash",
    "insect_breathing_dance_of_the_centipede",
    "Wind_breathing_black_wind_mountain_mist",
    "flame_breathing_flaming_eruption",
    "Beast_breathing_devouring_slash",
    "snow_breathing_illusory_Storm",
    "sound_breathing_smoke_screen",
}

--// Kill Aura \\--
local function attack(method)
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, 919, "ground_slash")
    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer(method, plr, plr.Character, plr.Character.HumanoidRootPart, plr.Character.Humanoid, math.huge, "ground_slash")
end

local attackMethods = {
    ["Combat"] = 'fist_combat',
    ["Sword"] = 'Sword_Combat_Slash',
    ["Scythe"] = 'Scythe_Combat_Slash',
    ["Claw"] = 'claw_Combat_Slash',
    ["Fans"] = 'fans_combat_slash',
}

local godModeState = false
local godModeToggle = {}-- Khai báo trước nhưng chưa gán

--// Main Script \\--
local library = loadstring(game:GetObjects("rbxassetid://7657867786")[1].Source)()
local Subs = library.subs
local IsOpen = Subs.Wait

local Window = library:CreateWindow({
    Name = "HackerLor | DMM DianaVsRice",
    Themeable = {
        Info = "VTrungHackerLor",
        Credit = false,
        Background = "",
        Visible = true
    }
})

--// Main Tab \\--
local MainTab = Window:CreateTab({Name = "Main"})
local MainSection = MainTab:CreateSection({Name = "Farming"})
local Settings = MainTab:CreateSection({Name = "Settings"})
local KillAura = MainTab:CreateSection({Name = "Kill Aura", Side = "Right"})
local Teleports = MainTab:CreateSection({Name = "Teleports", Side = "Right"})
local Info = MainTab:CreateSection({Name = "Info", Side = "Right"})
local AuraTab = MainTab:CreateSection({Name = "AuraSkills", Side = "Left"})


--// Misc Tab \\--
local MiscTab = Window:CreateTab({Name = "Misc"})
local MiscSection = MiscTab:CreateSection({Name = "Misc"})
local GodModeQuick = MiscTab:CreateSection({Name = "GMQ", Side = "Right"})
local AutoSkills = MiscTab:CreateSection({Name = "AutoSkills", Side = "Left"})
local SpeedAndJump = MiscTab:CreateSection({Name = "Speed&Jump", Side = "Right"})
local Ect = MiscTab:CreateSection({Name = "Ect", Side = "Left"})

local Debree = Workspace:WaitForChild("Debree")
local EctFolder = ReplicatedStorage:WaitForChild("Misc")
local Clashing = EctFolder:WaitForChild("Clashing")

MainSection:AddToggle({
    Name = "Farm",
    Flag = "FarmSelectedBosses",
    Callback = function (v)
        getgenv().Farm = v
            if antifallActive ~= nil and antifallActive then
                antifallActive = false
                DisableAntiFall() -- Gọi hàm sửa lỗi để tắt AntiFall

                local plr = game.Players.LocalPlayer
                if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    local humanoidRootPart = plr.Character.HumanoidRootPart
                    local humanoid = plr.Character:FindFirstChildOfClass("Humanoid") 
                        humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            	end
           end
    end
})

MainSection:AddToggle({
    Name = "Move Around [Arrow]",
    Flag = "MoveAroundBosses",
    Callback = function(v)
        getgenv().MoveAround = v
        if not v then
            local plr = game.Players.LocalPlayer
            if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local humanoid = plr.Character:FindFirstChildOfClass("Humanoid")
                humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
            end
        end
    end
})

MainSection:AddToggle({
    Name = "Arrow Aura [Near Mobs]",
    Flag = "Arrow",
    Callback = function (v)
        getgenv().Arrow = v
    end
})

MainSection:AddToggle({
    Name = "Arrow Aura [NoLag]",
    Flag = "ArrowAll",
    Callback = function (v)
        getgenv().AllArrow = v
    end
})

MainSection:AddTextbox({
    Name = 'Player Target',
    Placeholder = '...',
    Flag = 'Player Name',
    Callback = function(v)
        getgenv().selectedPlayerName = v
    end
})

MainSection:AddToggle({
    Name = "Arrow Aura [Target Player]",
    Flag = "ArrowTargeted",
    Callback = function (v)
        getgenv().TargetPlayersArrow = v
    end
})


function findPlayerByName(name)
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name == name and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            return player.Character
        end
    end
    return nil
end

-- Vòng lặp gây sát thương
spawn(function()
    while task.wait(1) do
        if getgenv().TargetPlayersArrow then
            local selectedPlayerName = getgenv().selectedPlayerName
            if selectedPlayerName and selectedPlayerName ~= "" then
                local target = findPlayerByName(selectedPlayerName)

                if target then
                    local targetCFrame = target:GetModelCFrame()
                    local humanoid = target:FindFirstChildOfClass("Humanoid")

                    if targetCFrame and humanoid and humanoid.Health > 0 then
                        for i = 1, 5 do
                            game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer(
                                "arrow_knock_back_damage",
                                game.Players.LocalPlayer.Character,
                                targetCFrame,
                                target,
                                200,
                                200
                            )
							task.wait(0.4)
                        end
                    end
                end
            end
        end
    end
end)



-- Vòng lặp teleport đến người chơi mục tiêu
MainSection:AddToggle({
    Name = "Teleport to Target",
    Flag = "TargetPlayersTeleport",
    Callback = function(state)
        if state then
            local selectedPlayerName = getgenv().selectedPlayerName
            if selectedPlayerName and selectedPlayerName ~= "" then
                local target = workspace:FindFirstChild(selectedPlayerName)
                
                if target and target:FindFirstChild("HumanoidRootPart") then
                    local playerCharacter = game.Players.LocalPlayer.Character
                    if playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart") then
                        local targetPosition = target.HumanoidRootPart.Position
                        local newPosition = Vector3.new(targetPosition.X, targetPosition.Y + 150, targetPosition.Z)
                        
                        -- Đảm bảo HumanoidRootPart tồn tại trước khi MoveTo để tránh lỗi
                        if playerCharacter:FindFirstChild("HumanoidRootPart") then
                            playerCharacter:MoveTo(newPosition)
                        end
                    end
                end
            end
        end
    end
})

--// Settings \\--
Settings:AddDropdown({
    Name = "Farm Method",
    List = {"Above","Behind","Below"},
    Flag = "FarmMethodSelection",
    Nothing = "Select Method...",
	Value = "Above",
    Callback = function(Chosen)
        FarmMethod = Chosen 
    end
})

Settings:AddSlider({
    Name = "Distance",
    Flag = "DistanceSlider",
    Value = 10,
    Min = 1,
    Max = 200,
    Textbox = true,
    Callback = function(Value)
        getgenv().Distance = Value
    end
})

Settings:AddSlider({
    Name = "Tween Speed",
    Flag = "TweenSlider",
    Value = 300,
    Min = 150,
    Max = 500,
    Textbox = true,
    Callback = function(Value)
        getgenv().tweenspeed = Value
    end
})

--// Kill Aura \\--
KillAura:AddToggle({
    Name = "Kill Aura",
    Flag = "KillAuraToggle",
    Callback = function (v)
        getgenv().KillAura = v
    end
})


local weapons = {"Sword", "Combat", "Scythe", "Fans", "Claw"}
local toggles = {}
local activeToggle = nil

for _, weapon in ipairs(weapons) do
    local toggle = KillAura:AddToggle({
        Name = weapon,
        Flag = "KillAuraWeapon_" .. weapon,
        Callback = function(state)
            if state then
                -- Tắt toggle trước đó nếu có và khác với toggle hiện tại
                if activeToggle and activeToggle ~= toggle then
                    activeToggle:SetState(false)
                end
                -- Cập nhật toggle hiện tại và thiết lập Method
                activeToggle = toggle
                Method = weapon
                print("Weapon Selected: " .. weapon)
            else
                -- Chỉ clear nếu chính toggle hiện tại bị tắt
                if activeToggle == toggle then
                    activeToggle = nil
                    Method = nil
                    print("Weapon Deselected")
                end
            end
        end
    })

    toggles[weapon] = toggle
end

Teleports:AddButton({
    Name = "Skibidi To",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local Character = Player.Character or Player.CharacterAdded:Wait()
        local HumanoidRootPart = Character:FindFirstChild("HumanoidRootPart")

        if not HumanoidRootPart then
            warn("⚠️ Lỗi: Không tìm thấy HumanoidRootPart!")
            return
        end

        -- Kiểm tra SelectedArea hợp lệ
        if not SelectedArea or SelectedArea == "" then
            warn("⚠️ Lỗi: Chưa chọn khu vực để dịch chuyển!")
            return
        end

        -- Xác định MapToUse dựa trên Map đã chọn
        local MapToUse = {}
        if SelectedMap == "Map1" then
            MapToUse = Map1
        elseif SelectedMap == "Map2" then
            MapToUse = Map2
        else
            warn("⚠️ Lỗi: Chưa chọn Map hợp lệ!")
            return
        end

        -- Kiểm tra Place hợp lệ
        local Place = MapToUse[SelectedArea]
        if not Place then
            warn("⚠️ Lỗi: Không tìm thấy tọa độ của khu vực [" .. SelectedArea .. "] trong Map [" .. SelectedMap .. "]!")
            return
        end

        -- Dịch chuyển tức thời
        HumanoidRootPart.CFrame = Place * CFrame.new(0, 5, 0)
        print("✅ Dịch chuyển thành công!")
    end
})



--// Info \\--
Info:AddLabel("")
Info:AddLabel("")
local infoLabel = Info:AddLabel("")
Info:AddLabel("")
Info:AddLabel("")


--// Misc Section \\--
MiscSection:AddToggle({
    Name = "Auto Collect Chest",
    Flag = "CollectAllChest",
    Keybind = false,
    Callback = function (v)
        AutoCollectChest = v
    end
})


SpeedAndJump:AddSlider({
    Name = "WalkSpeed",
    Value = 280,
    Min = 16,
    Max = 300,
    Flag = "WalkSpeed",
	Textbox = true,
    Callback = function(State)
        WalkSpeed = State
        if game.Players.LocalPlayer.Character then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = WalkSpeed
            end
        end
    end
})

SpeedAndJump:AddSlider({
    Name = "JumpPower",
    Value = 150,
    Min = 50,
    Max = 1000,
    Flag = "JumpPower",
	Textbox = true,
    Callback = function(State)
        JumpPower = State
        if game.Players.LocalPlayer.Character then
            local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
            if humanoid then
                humanoid.JumpPower = JumpPower
            end
        end
    end
})

--GodModeState--
local UIS = game:GetService("UserInputService")

local godModeToggle = GodModeQuick:AddToggle({
    Name = "Enable God Mode",
    Flag = "ENG_Toggle",
    keybind = "R", 
    Callback = function(v)
        godModeState = v
        ENG = v
    end
})

local function toggleGodMode(state)
    godModeState = state
    ENG = state

    -- Cập nhật giao diện của toggle
    if godModeToggle.Callback then
        task.spawn(function()
            godModeToggle.Callback(state)
        end)
    end
end

local godModeButton = GodModeQuick:AddButton({
    Name = "Enable God Mode",
    Callback = function()
        toggleGodMode(not godModeState) 
    end
})


UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.R then
        toggleGodMode(not godModeState)
    end
end)

for _, godMode in ipairs(GodModes) do
    local toggle = GodModeQuick:AddToggle({
        Name = godMode,
        Flag = "Gm_" .. godMode,
        Callback = function(state)
            if state then

                if activeToggle and activeToggle ~= toggle then
                    activeToggle:SetState(false)
                end

                activeToggle = toggle
                getgenv().GodSelected = godMode
            else

                if activeToggle == toggle then
                    activeToggle = nil
                    getgenv().GodSelected = nil
                end
            end
        end
    })

    toggles[godMode] = toggle
end


MiscSection:AddToggle({
    Name = "War Drums",
    Value = false, 
    Flag = "WarDrums",
    Callback = function(State)
        TLROAPSMG = State 
        while TLROAPSMG and IsOpen() do 
            DrumRemote:FireServer(true)
            task.wait(7.5)
        end     
    end 
})

MiscSection:AddToggle({
    Name = "Kamado God Mode [Kamado]",
    Flag = "KamadoGod",
    Keybind = false,
    Callback = function (v)
        if v then
            game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(true)
        else
            game:GetService("ReplicatedStorage").Remotes.heal_tang123asd:FireServer(false)
        end
    end
})

local Player = game.Players.LocalPlayer
local playerName = Player.Name  

MiscSection:AddToggle({
    Name = "Hybrid(Ngulắmmớiđemkhoe)",
    Flag = "HybridToggle",
    Keybind = false,
    Callback = function(v)
        local playerData = game:GetService("ReplicatedStorage").Player_Data
        local currentPlayerSlot = playerData:FindFirstChild(playerName)

        if currentPlayerSlot and currentPlayerSlot:FindFirstChild("Race") then
            if v then
                if currentPlayerSlot.Race.Value ~= 4 then
                    currentPlayerSlot.Race.Value = 4 
                end
            else
                if currentPlayerSlot.Race.Value ~= 3 then
                    currentPlayerSlot.Race.Value = 3  
                end
            end
        end
    end
})


MiscSection:AddToggle({
    Name = "Heart Ablaze [Human]",
    Flag = "HeartAblaze",
    Keybind = false,
    Callback = function (v)
        if v then
            game:GetService("ReplicatedStorage").Remotes.heart_ablaze_mode_remote:FireServer(true)
        else
            game:GetService("ReplicatedStorage").Remotes.heart_ablaze_mode_remote:FireServer(false)
        end
    end
})

MiscSection:AddToggle({
    Name = "Thunder Mode [Human]",
    Flag = "Thunder",
    Keybind = false,
    Callback = function (v)
        if v then
            game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(true)
        else
            game:GetService("ReplicatedStorage").Remotes.thundertang123:FireServer(false)
        end
    end
})


MiscSection:AddToggle({
    Name = "No Sun Dmg",
    Flag = "NS",
    Callback = function (v)
        if game:GetService("Players").LocalPlayer.PlayerScripts.Small_Scripts.Gameplay:FindFirstChild("Sun_Damage") then
            if v == true then
                    game:GetService("Players").LocalPlayer.PlayerScripts.Small_Scripts.Gameplay.Sun_Damage.Disabled = true                
                end
            end
    end
})


MiscSection:AddToggle({
    Name = "Boss Damage Log Spoof",
    Flag = "BDLS",
    Keybind = false,
    Callback = function (v)
        getgenv().hide_userdmg = v
    end
})



AutoSkills:AddToggle({
    Name = "Auto Skill",
    Flag = "AutoSkillEnabled",
    Callback = function(state)
        AutoSkillEnabled = state
        local skill = SelectedSkill or "Z"

        if state then
            task.spawn(AutoSkillLoop)
        end
    end
})

for _, skill in ipairs({"Z", "X", "C", "V", "B", "N"}) do
    AutoSkills:AddToggle({
        Name = "Use Skill " .. skill,
        Flag = "UseSkill" .. skill,
        Callback = function(state)
            SkillStates[skill] = state
        end
    })
end

local AutoEatSouls = false

Ect:AddToggle({
    Name = "Auto Eat Souls",
    Value = false,
    Flag = "Souls",
    Callback = function(State)
        AutoEatSouls = State
    end
})

Ect:AddToggle({
    Name = "Auto Collect Orbs",
    Value = false,
    Flag = "AutoOrb",
    Callback = function(State)
        LIPJRMAL = State

        task.spawn(function()
            while LIPJRMAL and IsOpen() do
                if not HumanoidRootPart or not HumanoidRootPart.Parent then
                    HumanoidRootPart = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
                end

                for _, v in ipairs(Map:GetChildren()) do
                    if v:IsA("Model") and v:FindFirstChild("Sound") then
                        for _, v1 in ipairs(v:GetChildren()) do
                            if v1:FindFirstChild("TouchInterest") then
                                v:PivotTo(HumanoidRootPart.CFrame)
                            end
                        end
                    end
                end

                task.wait(0.5)
            end
        end)
    end
})

local Formatted = ("%svs"):format(Player.Name)
local autoClashRunning = false
local autoClashThread = nil

-- Hàm chính Auto Clash
function StartAutoClash()
    if autoClashRunning then return end -- tránh chạy nhiều vòng
    autoClashRunning = true
    autoClashThread = task.spawn(function()
        while autoClashRunning and IsOpen() do
            local ClashFolder = Debree:FindFirstChild("clash_folder") 
            if ClashFolder then 
                for _, v in next, ClashFolder:GetChildren() do 
                    if v.Name:find(Formatted) then 
                        local Points = v:FindFirstChild(Player.Name) 
                        if Points then 
                            task.spawn(function()
                                task.wait(7.5)
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("Change_Value", Points, 99999999999)
                            end)
                        end
                    else 
                        for _, Points in next, v:GetChildren() do 
                            if Players:FindFirstChild(Points.Name) then 
                                task.spawn(function()
                                    task.wait(7.5)
                                    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("Change_Value", Points, 99999999999)
                                end)
                            end 
                        end 
                    end 
                end 
            end

            -- Clash đang diễn ra
            local Found = Clashing:FindFirstChild(Player.Name)
            local Points = Found and Found:FindFirstChild("Points") 
            if Points then
                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer("Change_Value", Points, 99999999999)  
            end

            task.wait(1) -- Giảm spam
        end
    end)
end

-- Hàm dừng Auto Clash
function StopAutoClash()
    autoClashRunning = false
end

-- GUI Toggle để bật/tắt Auto Clash
Ect:AddToggle({
    Name = "Auto Clash",
    Value = false, 
    Flag = "AutoClash",
    Callback = function(State)
        if State then
            StartAutoClash()
        else
            StopAutoClash()
        end
    end
})

-- Khởi tạo trạng thái cho 2 boss
local flesh = 0
local enmu = 0

-- Thêm toggle Boss Handler vào GUI
Ect:AddToggle({
    Name = "Boss Handler", 
    Value = false, 
    Flag = "BossHandler",
    Callback = function(State)
        task.spawn(function()
            while State and IsOpen() do
                local config = workspace:FindFirstChild("Mobs") and workspace.Mobs:FindFirstChild("Npc_Configuration")

                if config then
                    local hasEnmu = config:FindFirstChild("Enmu") ~= nil
                    local hasFlesh = config:FindFirstChild("Flesh Monster") ~= nil
                    local hasAkaza = config:FindFirstChild("Akaza") ~= nil

                    -- Phát hiện Enmu
                    if hasEnmu then
                        if enmu == 0 then
                            enmu = 1
                            print(">> Enmu xuất hiện.")
                        end
                    else
                        if enmu == 1 then
                            enmu = 0
                            print(">> Enmu biến mất.")
                            getgenv().Arrow = false
                            pcall(stopArrow275Loop)
                            print(">> Mất Enmu nhưng chưa có Flesh Monster => tắt startArrow275Loop")
                        end
                    end

                    -- Phát hiện Flesh Monster
                    if hasFlesh then
                        if flesh == 0 then
                            flesh = 1
                            print(">> Flesh Monster xuất hiện => chờ 5s rồi bật startArrow275Loop")
                            if not getgenv().Arrow then
                                task.delay(5, function()
                                    getgenv().Arrow = true
                                    pcall(startArrow275Loop)
                                    StartAutoClash()
                                    print(">> bật AutoClash")
                                end)
                            end
                        end
                    end

                    -- Phát hiện Akaza và thực hiện tween
                    if hasAkaza then
                        StopAutoClash()
                        print(">> tắt AutoClash")
                        print(">> Akaza phát hiện => Nhảy lùi 200 đơn vị")

                        local player = game.Players.LocalPlayer
                        local hrp = player.Character and player.Character:FindFirstChild("HumanoidRootPart")

                        if hrp then
                            -- Lùi 200 đơn vị
                            local targetPosition = hrp.Position - hrp.CFrame.LookVector * 200

                            -- Tính toán khoảng cách từ vị trí hiện tại đến vị trí mục tiêu
                            local function GetDistance(Endpoint)
                                local Magnitude = (Endpoint - hrp.Position).Magnitude
                                return Magnitude
                            end

                            -- Cấu hình tween
                            local Distance = GetDistance(targetPosition)
                            local TweenInfo = TweenInfo.new(Distance / 100, Enum.EasingStyle.Linear)  -- Điều chỉnh tốc độ

                            -- Tạo tween để di chuyển đến vị trí lùi lại
                            local targetCFrame = CFrame.new(targetPosition)
                            local TweenObj = TweenService:Create(hrp, TweenInfo, { CFrame = targetCFrame })
                            TweenObj:Play()
                        end
                    end
                end

                task.wait(1)
            end
        end)
    end
})




Ect:AddButton({
    Name = "Reset",
    Callback = function()
        Humanoid.Health = 0 
        task.wait(0.5)
        Humanoid.Health = 0
    end 
})

--// Actual Code \\--

-- Hàm cập nhật danh sách địa điểm & Bosses
function UpdateLists()
    local LocationsToUse, BossesToUse = {}, {}

    if SelectedMap == "Map1" then
        LocationsToUse = Map1List
        BossesToUse = BossesMap1List
    elseif SelectedMap == "Map2" then
        LocationsToUse = Map2List
        BossesToUse = BossesMap2List
    end

    -- Xóa Dropdown cũ nếu tồn tại
    if LocationsDropdown then
        LocationsDropdown:Remove()
    end
    if BossesDropdown then
        BossesDropdown:Remove()
    end

    -- Tạo Dropdown mới với danh sách cập nhật
    LocationsDropdown = Teleports:AddDropdown({
        Name = "Locations",
        Nothing = "Select Location...",
        Flag = "LocationSelect",
        List = LocationsToUse,
        Callback = function(State)
            SelectedArea = State
        end
    })



    -- Gọi UpdateActiveBossLocations để cập nhật danh sách boss hiện tại
    UpdateActiveBossLocations()
end

function UpdateActiveBossLocations()
    ActiveBossLocations = {}

    -- Kiểm tra map hiện tại và cập nhật danh sách boss
    if SelectedMap == "Map1" then
        ActiveBossLocations = BossLocationsMap1
    elseif SelectedMap == "Map2" then
        ActiveBossLocations = BossLocationsMap2
    else
        return
    end

end

local placeId = game.PlaceId
local mapName

if placeId == 13883279773 then
    mapName = "Map1"
elseif placeId == 13883059853 then
    mapName = "Map2"
end

SelectedMap = mapName
UpdateLists()

--// Auto Collect Chest \\--
spawn(function()
    while task.wait() do
        if AutoCollectChest then
            for _, v in pairs(game:GetService("Workspace").Debree:GetChildren()) do
                if v.Name == "Loot_Chest" then
                    for i,c in pairs(v:FindFirstChild("Drops"):GetChildren()) do
                            v["Add_To_Inventory"]:InvokeServer(c.Name)
                            delay(0.5, function()
                            c:Destroy()
                        end)
                    end
                end
            end
		end 
		
    end
end)

--Eat souls--
task.spawn(function()
    while task.wait(0.5) do
        if AutoEatSouls then
            for _, v in pairs(workspace.Debree:GetChildren()) do
                if v.Name == "Soul" then
                    local Handle = v:FindFirstChild("Handle")
                    local Eat = Handle and Handle:FindFirstChild("Eatthedamnsoul")
                    if Eat then
                        Eat:FireServer()
                    end
                end
            end
        end
    end
end)


MiscSection:AddToggle({
    Name = "No Fog",
    Flag = "NF",
    Keybind = false,
    Callback = function (v)
        if v == true then
            for index, light in pairs(game:GetService("Lighting"):GetChildren()) do
                if light.Name == "Atmosphere" or string.find(light.Name, "Blur") or string.find(light.Name, "Bloom") then
                    light:Destroy()
                end
            end
            game:GetService("Lighting").FogEnd = 1000000

            if not getgenv().DisableDamageTextConnection then
                getgenv().DisableDamageTextConnection = game:GetService("RunService").Stepped:Connect(function()
                    local damageFolder = workspace:FindFirstChild("Debree") and workspace.Debree:FindFirstChild("Damage_Folder")
                    if damageFolder then
                        for _, dmgText in pairs(damageFolder:GetChildren()) do
                            if dmgText:IsA("Part") then
                                dmgText:Destroy()
                            end
                        end
                    end
                end)
            end

        elseif v == false then
            print("1")

            if getgenv().DisableDamageTextConnection then
                getgenv().DisableDamageTextConnection:Disconnect()
                getgenv().DisableDamageTextConnection = nil
            end
        end
    end
})


--// Inf iFrames \\--
spawn(function()
    while task.wait() do
        if ENG then
            local args = {
                [1] = "skil_ting_asd",
                [2] = game:GetService("Players").LocalPlayer,
                [3] = getgenv().GodSelected,
                [4] = 1
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Remotes"):WaitForChild("To_Server"):WaitForChild("Handle_Initiate_S"):FireServer(unpack(args))
            task.wait(0.5)
        end
    end
end)

--// Damage Log Spoofer \\--
spawn(function()
    while task.wait() do
        if getgenv().hide_userdmg == true then
            local user = game:GetService("Players").LocalPlayer.Name
            if game:GetService("Players")[tostring(user)].PlayerGui["Pop_Ups"].Bosshp["Damage_Log"]:FindFirstChild(tostring(user)) then
            game:GetService("Players")[tostring(user)].PlayerGui["Pop_Ups"].Bosshp["Damage_Log"][tostring(user)].txt.Text = "Blackout Blackout Blackout"
            end
        end
    end
end)

--// Auto Med and Auto Split \\--
spawn(function()
    while task.wait() do
        if getgenv().AutoMed then
            pcall(function()
                game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["Meditate_gui"].Holder.LocalScript.Value.Value = 100
            end)
        end
    end
end)

spawn(function()
    while task.wait() do
        if getgenv().AutoSplit then
            pcall(function()
                game:GetService("Players").LocalPlayer.PlayerGui.ExcessGuis["boulder_split_ui"].Holder.LocalScript.Value.Value = 10000
            end)
        end
    end
end)

--// Kill Aura \\-- 
task.spawn(function()
    while task.wait() do
        if getgenv().KillAura then
            if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                    if (not debounce) and ((not game.Players.LocalPlayer:FindFirstChild("combotangasd123")) or game.Players.LocalPlayer:FindFirstChild("combotangasd123") and game.Players.LocalPlayer:FindFirstChild("combotangasd123").Value < 1) then 
                    debounce = true 
                    attack(attackMethods[Method])
                    task.wait(1.25)
                    debounce = false
                end
            end
        end
    end
end)



getgenv().Distance = 10
getgenv().tweenspeed = 300


--// Farm \\--
function getclosestSkills(parentFolder)
    local closestEntity = nil
    local closestDistance = math.huge
    local playerPosition = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
    local entities = parentFolder:GetDescendants()

    for _, entity in ipairs(entities) do
        if entity:IsA("Model") then
            local humanoid = entity:FindFirstChild("Humanoid")
            if humanoid and humanoid.Health > 0 then
				local modelCFrame = nil
				if entity.GetModelCFrame and type(entity.GetModelCFrame) == "function" then
					modelCFrame = entity:GetModelCFrame()
				end
				if modelCFrame then
					local distance = (entity:GetModelCFrame().Position - playerPosition).Magnitude
                	if distance < closestDistance then
                   		closestDistance = distance
                  		closestEntity = entity
					end
				end	

            end
        end
    end
    return closestEntity
end

 
--// Arrow Kill Aura \\--
local plr = game.Players.LocalPlayer
local arrow275Loop = nil

function resetArrow275()
    if arrow275Loop then
        task.cancel(arrow275Loop)
        arrow275Loop = nil
    end
end

function startArrow275Loop()
    resetArrow275()  
    arrow275Loop = task.spawn(function()
        while getgenv().Arrow do
            if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                local parentFolder = game:GetService("Workspace").Mobs
                local v = getclosestSkills(parentFolder)

                while not v and getgenv().Arrow do
                    task.wait(0.5)
                    v = getclosestSkills(parentFolder)
                end

                local modelCFrame = nil
                if v and v.GetModelCFrame and type(v.GetModelCFrame) == "function" then
                    modelCFrame = v:GetModelCFrame()
                end

                while not modelCFrame and getgenv().Arrow do
                    task.wait(0.1)
                    if v and v.GetModelCFrame and type(v.GetModelCFrame) == "function" then
                        modelCFrame = v:GetModelCFrame()
                    end
                    if not v then
                        break
                    end
                end

                -- Kiểm tra HP trước khi bắn
                local humanoid = v and v:FindFirstChildOfClass("Humanoid")
                if modelCFrame and humanoid and humanoid.Health > 0 then
                    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(
                        "arrow_knock_back_damage",
                        plr.Character,
                        modelCFrame,
                        v,
                        200,
                        200
                    )
					task.wait(0.3)
                end
            end
        end
        resetArrow275()
    end)
end


spawn(function()
    while task.wait() do
        if getgenv().Arrow then
            if not arrow275Loop then
                startArrow275Loop()
            end
        else
            resetArrow275()
        end
    end
end)



spawn(function()
    while task.wait() do
        if getgenv().Arrow or getgenv().TargetPlayersArrow or getgenv().AllArrow then
            if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S_:InvokeServer("skil_ting_asd",game:GetService("Players").LocalPlayer,"arrow_knock_back",5)
				task.wait(10)
            end
        end
    end
end)


--AuraArrow[NoLag]--
local plr = game.Players.LocalPlayer
local lastCharacter = nil
local arrowNoLagLoop = nil

function resetNoLagState()
    lastCharacter = nil
    if arrowNoLagLoop then
        task.cancel(arrowNoLagLoop)
        arrowNoLagLoop = nil
    end
end

function arrowNoLagAttackLoop()
    arrowNoLagLoop = task.spawn(function()
        while getgenv().AllArrow do
            if not plr.Character or not plr.Character:FindFirstChild("HumanoidRootPart") then
                resetNoLagState()
                break
            end

            local parentFolder = game:GetService("Workspace").Mobs
            local v = nil


            while not v and getgenv().AllArrow do
                v = getclosestSkills(parentFolder)
                task.wait(0.5) 
            end

            while getgenv().AllArrow do
                if not v or not v.Parent or (v:FindFirstChildOfClass("Humanoid") and v:FindFirstChildOfClass("Humanoid").Health <= 0) then
                    repeat
                        v = getclosestSkills(parentFolder)
                        task.wait(0.3) 
                    until v or not getgenv().AllArrow
                end


                if v and v.Parent then
                    local humanoid = v:FindFirstChildOfClass("Humanoid")
                    if humanoid and humanoid.Health > 0 then
                        local modelCFrame = v:GetModelCFrame()
                        if modelCFrame then
                            game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(
                                "arrow_knock_back_damage",
                                plr.Character,
                                modelCFrame,
                                v,
                                200,
                                200
                            )
							task.wait(0.3) 
                        end
                    end
                end
            end
        end
    end)
end



spawn(function()
    while task.wait() do
        if getgenv().AllArrow then
            if plr.Character ~= lastCharacter then
                resetNoLagState()
                lastCharacter = plr.Character
                arrowNoLagAttackLoop()
            elseif not arrowNoLagLoop then
                arrowNoLagAttackLoop()
            end
        else
            resetNoLagState()
        end
    end
end)


--// NoClip \\--
local antifallActive = false 
spawn(function()
    game:GetService("RunService").Stepped:Connect(function()
        if getgenv().Farm or getgenv().MoveAround or AutoCollectLilys then
            for _, v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                if v:IsA("BasePart") then
                    v.CanCollide = false    
                end
                if v:IsA("Humanoid") then
                    v:ChangeState(11)
                end
            end
            if not antifallActive then  -- Check if no clip is already active
                antifallActive = true
                EnableAntiFall()
            end
        else
            if antifallActive then  -- Check if no clip is active
                antifallActive = false
                DisableAntiFall()
            end
        end
    end)
end)

--// Farm Method \\--
spawn(function()
    while wait() do
        SkillActive = AutoUseSkills and (getgenv().Farm and NearestMobs)
         if FarmMethod == "Above" then
                FarmModes = CFrame.new(0,getgenv().Distance,0) * CFrame.Angles(math.rad(-90),0,0)
            elseif FarmMethod == "Below" then
                FarmModes = CFrame.new(0,-getgenv().Distance,0) * CFrame.Angles(math.rad(90),0,0)
            elseif FarmMethod == "Behind" then
                FarmModes = CFrame.new(0,0,getgenv().Distance)
            end
    end
end)



--// Player Stats \\--
local plr = game.Players.LocalPlayer
local function updateLabels()
    local playerData = game:GetService("ReplicatedStorage").Player_Data[plr.Name]
    if playerData then
        local statText = ""
        statText = statText .. "Clan: " .. tostring(playerData.Clan.Value) .. "\n"
        statText = statText .. "Race: " .. raceTable[playerData.Race.Value] .. "\n"
        statText = statText .. "Demon Art Spins: " .. tostring(playerData.Demon_art_Spins.Value) .. "\n"
        statText = statText .. "Clan Spins: " .. tostring(playerData.Spins.Value) .. "\n"
        statText = statText .. "Yen: " .. tostring(playerData.Yen.Value) .. "\n"
        local demonProgressText = string.format("Demon Progress: %d/%d", playerData.DemonProgress[1].Value, playerData.DemonProgress[2].Value)
        statText = statText .. demonProgressText .. "\n"
        local breathingProgressText = string.format("Breathing Progress: %d/%d", playerData.BreathingProgress[1].Value, playerData.BreathingProgress[2].Value)
        statText = statText .. breathingProgressText

        infoLabel:Set(statText)
    end
end

local LastCharacter = game.Players.LocalPlayer.Character

-- AutoBoss --
local FarmLoop = nil
local VisitedBosses = {}

local function startFarmLoop()
    if FarmLoop then return end -- Tránh chạy nhiều vòng lặp song song
    
    FarmLoop = task.spawn(function()
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait() -- Lấy nhân vật hiện tại
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        local lastCharacter = character -- Lưu lại nhân vật cũ để kiểm tra thay đổi

        -- Hủy tween cũ nếu có
        if TweenFa then
            TweenFa:Cancel()
            TweenFa = nil
        end

        while getgenv().Farm do
            -- Cập nhật danh sách boss còn lại
            UpdateActiveBossLocations()

            if #ActiveBossLocations == 0 then
                task.wait(1)
                continue
            end

            -- Tìm boss chưa thăm gần nhất
            local candidateBosses = {}
            for _, boss in pairs(ActiveBossLocations) do
                if not VisitedBosses[boss.Name] then
                    table.insert(candidateBosses, boss)
                end
            end

            if #candidateBosses == 0 then
                VisitedBosses = {} -- Reset khi đã thăm hết
                candidateBosses = ActiveBossLocations
            end

            -- Sắp xếp boss theo khoảng cách
            table.sort(candidateBosses, function(a, b)
                return GetDistance(a.Position) < GetDistance(b.Position)
            end)

            local boss = candidateBosses[1]
            if not boss then
                task.wait(1)
                continue
            end

            local bossCFrame = CFrame.new(boss.Position)
            local TweenFa = Tween(bossCFrame)
            AtBoss = false

            -- Di chuyển đến boss
            repeat
                task.wait()
                if not game.Players.LocalPlayer.Character then
                    if TweenFa then
                        TweenFa:Cancel()
                        TweenFa = nil
                    end
                    break
                end
            until not getgenv().Farm or GetDistance(bossCFrame) < 20

            if not getgenv().Farm then break end
            if TweenFa then
                TweenFa:Cancel()
                TweenFa = nil
            end

            -- Kiểm tra boss còn sống không
            local bossEntity = getclosest({boss.Name}, game:GetService("Workspace").Mobs)
            task.wait(1)

            if bossEntity and bossEntity:FindFirstChild("Humanoid") then
                while getgenv().Farm and bossEntity.Parent and bossEntity.Humanoid.Health > 0 do
                    if not game.Players.LocalPlayer.Character then
                        break
                    end
                    task.wait()

                    if bossEntity.PrimaryPart then -- Kiểm tra tránh nil trước khi dùng
                        local entityCFrame = CFrame.new(bossEntity.PrimaryPart.Position) * FarmModes
                        
                        if GetDistance(entityCFrame) >= 25 and GetDistance(entityCFrame) < 150 then
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = entityCFrame
                        else
                            if not TweenFa then
                                TweenFa = Tween(entityCFrame)
                            end
                        end
                        AtBoss = GetDistance(entityCFrame) < 25
                    end
                end
            end

            VisitedBosses[boss.Name] = true
            UpdateActiveBossLocations()
        end
    end)
end

game:GetService("RunService").Heartbeat:Connect(function()
    local player = game.Players.LocalPlayer
    local currentCharacter = player.Character

    if getgenv().Farm and not FarmLoop then
        startFarmLoop()
    elseif not getgenv().Farm and FarmLoop then
        task.cancel(FarmLoop)
        FarmLoop = nil
    elseif getgenv().Farm and FarmLoop and currentCharacter ~= LastCharacter then
        LastCharacter = currentCharacter -- Cập nhật nhân vật mới
        task.wait(4) -- Chờ 4 giây sau khi hồi sinh
        getgenv().Farm = false
        task.cancel(FarmLoop)
        FarmLoop = nil
        task.wait(2) -- Chờ một chút để đảm bảo toggle tắt
        getgenv().Farm = true
        startFarmLoop()
    end
end)

AuraTab:AddToggle({
    Name = "Swamp Aura [Near Mobs]",
    Flag = "Swamp",
    Callback = function(v)
        getgenv().Swamp = v
        if v then
            task.spawn(function()
                while getgenv().Swamp do 
                    local bossEntity = getclosest(AllowedBosses, game:GetService("Workspace").Mobs)
                    
                    if bossEntity and bossEntity:FindFirstChild("Humanoid") and bossEntity.Humanoid.Health > 0 then
                        local bossCFrame = bossEntity:GetModelCFrame()

                        local args = {
                            [1] = "swamp_puddle_damage",
                            [2] = game.Players.LocalPlayer.Character,
                            [3] = bossCFrame
                        }          
                        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))                
                    end
                    task.wait(0.3)
                end
            end)
            task.spawn(function()
                while getgenv().Swamp do
					if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                   	 local args = {
                        [1] = "skil_ting_asd",
                        [2] = game.Players.LocalPlayer,
                        [3] = "swampbda_swamp_puddle",
                        [4] = 5
                    }
                    game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))        
                    task.wait(9.5)
					end
                end
            end)
        end
    end
})

AuraTab:AddToggle({
    Name = "Reaper Aura [Near Mobs]",
    Flag = "Reaper",
    Callback = function(v)
        getgenv().Reaper = v
        if v then
            -- Luồng tấn công sát thương
            task.spawn(function()
                while getgenv().Reaper do 
                    local target = getclosestSkills(game:GetService("Workspace").Mobs)
                    
                    if target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
                        local targetCFrame = nil
                        if target.GetModelCFrame and type(target.GetModelCFrame) == "function" then
                            targetCFrame = target:GetModelCFrame()
                        end

                        if targetCFrame then
                            local distance = (targetCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                            -- Chỉ gây sát thương khi gần hơn 25
                            if distance < 25 then
                                local args = {
                                    [1] = "reaper-slash_thing_damage",
                                    [2] = game.Players.LocalPlayer.Character,
                                    [3] = targetCFrame
                                }          
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))                
                            end
                        end
                    end
                    task.wait(2.5)
                end
            end)

            -- Luồng kích hoạt skill
            task.spawn(function()
                while getgenv().Reaper do
				 	if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                                local args = {
                                    [1] = "skil_ting_asd",
                                    [2] = game.Players.LocalPlayer,
                                    [3] = "reaperbda_reapofdispair",
                                    [4] = 5
                                }
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))        
                   				task.wait(9)
					 end
                end
            end)
        end
    end
})


AuraTab:AddToggle({
    Name = "Tamari Aura [Near Mobs]",
    Flag = "Tamari",
    Callback = function(v)
        getgenv().Tamari = v
        if v then
            -- Luồng tấn công sát thương
            task.spawn(function()
                while getgenv().Tamari do 
                    local target = getclosestSkills(game:GetService("Workspace").Mobs)

                    -- Kiểm tra target tồn tại và có Humanoid hợp lệ
                    if target and target.Parent and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
                        local targetCFrame = nil
                        
                        -- Kiểm tra hàm GetModelCFrame hợp lệ trước khi gọi
                        if target.GetModelCFrame and type(target.GetModelCFrame) == "function" then
                            targetCFrame = target:GetModelCFrame()
                        end

                        if targetCFrame then
                            local distance = (targetCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                            -- Gây sát thương ngay lập tức nếu mục tiêu trong phạm vi
                            if distance < 40 then
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(
                                    "Tamari_Normal_Throw_Damage_new",
                                    game.Players.LocalPlayer.Character,
                                    targetCFrame
                                )

                                -- Kiểm tra lại nếu target còn sống sau đòn tấn công
                                if target.Parent and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
                                    task.wait(3)
                                end
                            end
                        end
                    end
                    task.wait(0.1) -- Kiểm tra mục tiêu mới nhanh hơn
                end
            end)

            -- Luồng kích hoạt skill
            task.spawn(function()
                while getgenv().Tamari do
                    if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                        game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(
                            "skil_ting_asd",
                            game.Players.LocalPlayer,
                            "Tamari2_Normal_Throw",
                            5
                        )        
                    end
                    task.wait(10) -- Đặt task.wait(10) sau khi kích hoạt skill để tránh spam
                end
            end)
        end
    end
})


AuraTab:AddToggle({
    Name = "Dream Aura [Near Mobs]",
    Flag = "Dream",
    Callback = function(v)
        getgenv().Dream = v
        if v then
            -- Luồng tấn công sát thương
            task.spawn(function()
                while getgenv().Dream do 
                    local target = getclosestSkills(game:GetService("Workspace").Mobs)
                    
                    if target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
                        local targetCFrame = nil
                        if target.GetModelCFrame and type(target.GetModelCFrame) == "function" then
                            targetCFrame = target:GetModelCFrame()
                        end

                        if targetCFrame then
                            local distance = (targetCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                            -- Chỉ gây sát thương khi gần hơn 40
                            if distance < 40 then
                                local args = {
                                    [1] = "dream_hypnosis_damage",
                                    [2] = game.Players.LocalPlayer.Character,
                                    [3] = targetCFrame
                                }          
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))                
                            end
                        end
                    end
                    task.wait(2.5)
                end
            end)

            -- Luồng kích hoạt skill
            task.spawn(function()
                while getgenv().Dream do
					if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                                local args = {
                                    [1] = "skil_ting_asd",
                                    [2] = game.Players.LocalPlayer,
                                    [3] = "dream_man_hypnosis",
                                    [4] = 5
                                }
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))        
                   				task.wait(18)
					end
                end
            end)
        end
    end
})


AuraTab:AddToggle({
    Name = "Blood Aura [Near Mobs]",
    Flag = "Blood",
    Callback = function(v)
        getgenv().Blood = v
        if v then
            -- Luồng tấn công sát thương
            task.spawn(function()
                while getgenv().Blood do 
                    local target = getclosestSkills(game:GetService("Workspace").Mobs)
                    
                    if target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
                        local targetCFrame = nil
                        if target.GetModelCFrame and type(target.GetModelCFrame) == "function" then
                            targetCFrame = target:GetModelCFrame()
                        end

                        if targetCFrame then
                            local distance = (targetCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                            -- Chỉ gây sát thương khi gần hơn 25
                            if distance < 40 then
                                local args = {
                                    [1] = "blood_burst_blood_shot_damage",
                                    [2] = game.Players.LocalPlayer.Character,
                                    [3] = targetCFrame
                                }          
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))      
                            end
                        end
                    end
					task.wait(8)
                end
            end)

            -- Luồng kích hoạt skill
            task.spawn(function()
                while getgenv().Blood do
				 	if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                                local args = {
                                    [1] = "skil_ting_asd",
                                    [2] = game.Players.LocalPlayer,
                                    [3] = "blood_burst_blood_shot",
                                    [4] = 5
                                }
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))        
                   				task.wait(18)
					 end
                end
            end)
        end
    end
})


AuraTab:AddToggle({
    Name = "Ice Aura [Near Mobs]",
    Flag = "IceKA",
    Callback = function(v)
        getgenv().IceKA = v
        if v then
            -- Luồng tấn công sát thương
            task.spawn(function()
                while getgenv().IceKA do 
                    local target = getclosestSkills(game:GetService("Workspace").Mobs)
                    
                    if target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
                        local targetCFrame = nil
                        if target.GetModelCFrame and type(target.GetModelCFrame) == "function" then
                            targetCFrame = target:GetModelCFrame()
                        end

                        if targetCFrame then
                            local distance = (targetCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                            -- Chỉ gây sát thương khi gần hơn 40
                            if distance < 40 then
                                local args = {
                                    [1] = "ice_demon_art_wintry_iciles_damage",
                                    [2] = game.Players.LocalPlayer.Character,
                                    [3] = targetCFrame
                                }          
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))                
                            end
                        end
                    end
                    task.wait(2)
                end
            end)

            -- Luồng kích hoạt skill
            task.spawn(function()
                while getgenv().IceKA do
					if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                                local args = {
                                    [1] = "skil_ting_asd",
                                    [2] = game.Players.LocalPlayer,
                                    [3] = "ice_demon_art_wintry_iciles",
                                    [4] = 5
                                }
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))        
								task.wait(15)
					end
                end
            end)
        end
    end
})


AuraTab:AddToggle({
    Name = "Shock Aura [Near Mobs]",
    Flag = "Shock",
    Callback = function(v)
        getgenv().Shock = v
        if v then
            -- Luồng tấn công sát thương
            task.spawn(function()
                while getgenv().Shock do 
                    local target = getclosestSkills(game:GetService("Workspace").Mobs)
                    
                    if target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 then
                        local targetCFrame = nil
                        if target.GetModelCFrame and type(target.GetModelCFrame) == "function" then
                            targetCFrame = target:GetModelCFrame()
                        end

                        if targetCFrame then
                            local distance = (targetCFrame.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude

                            -- Chỉ gây sát thương khi gần hơn 40
                            if distance < 40 then
                                local args = {
                                    [1] = "Akaza_Air_Type_Damage",
                                    [2] = game.Players.LocalPlayer.Character,
                                    [3] = targetCFrame
                                }          
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))                
                            end
                        end
                    end
                    task.wait(4)
                end
            end)

            -- Luồng kích hoạt skill
            task.spawn(function()
                while getgenv().Shock do
					if plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
                                local args = {
                                    [1] = "skil_ting_asd",
                                    [2] = game.Players.LocalPlayer,
                                    [3] = "akaza_bda_air_type",
                                    [4] = 5
                                }
                                game:GetService("ReplicatedStorage").Remotes.To_Server.Handle_Initiate_S:FireServer(unpack(args))
								task.wait(10)
					end
                end
            end)
        end
    end
})



--MoveAround--
local MoveLoop = nil
local AllBosses = {}  -- Danh sách tất cả boss có thể farm
local VisitedBosses = {}  -- Danh sách các boss đã ghé thăm

local function startMoveLoop()
    -- Kiểm tra nếu MoveLoop đã tồn tại, hủy nó trước khi tạo lại
    if MoveLoop then
        task.cancel(MoveLoop)  -- Hủy task thread cũ
    end

    MoveLoop = task.spawn(function()
        LastCharacter = currentCharacter -- Cập nhật nhân vật mới
        while getgenv().MoveAround do
            local player = game.Players.LocalPlayer
            if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                player.CharacterAdded:Wait()
                task.wait(1)
            end
            
            UpdateActiveBossLocations()
            if #ActiveBossLocations == 0 then
                task.wait(1)
                continue
            end

            -- Cập nhật danh sách tất cả boss nếu chưa có
            if #AllBosses == 0 then
                for _, boss in pairs(ActiveBossLocations) do
                    table.insert(AllBosses, boss)
                end
            end

            local candidateBosses = {}
            for _, boss in pairs(ActiveBossLocations) do
                if not VisitedBosses[boss.Name] then
                    table.insert(candidateBosses, boss)
                end
            end

            -- Nếu đã đi hết boss, reset danh sách VisitedBosses
            if #candidateBosses == 0 then
                VisitedBosses = {}
                candidateBosses = ActiveBossLocations
            end

            table.sort(candidateBosses, function(a, b)
                return GetDistance(a.Position) < GetDistance(b.Position)
            end)

            local boss = candidateBosses[1]
            if not boss then
                task.wait(1)
                continue
            end

            local bossCFrame = CFrame.new(boss.Position)
            local TweenFa = Tween(bossCFrame)

            repeat
                task.wait()
                if not game.Players.LocalPlayer.Character then
                    if TweenFa then
                        TweenFa:Cancel()
                        TweenFa = nil
                    end
                    break
                end
            until not getgenv().MoveAround or GetDistance(bossCFrame) < 20

            if not getgenv().MoveAround then break end
            if TweenFa then
                TweenFa:Cancel()
                TweenFa = nil
            end

            VisitedBosses[boss.Name] = true
            task.wait(1) -- Dừng 1 giây trước khi đi tiếp boss khác
        end
    end)
end

game:GetService("RunService").Heartbeat:Connect(function()
    local player = game.Players.LocalPlayer
    local currentCharacter = player.Character

    if getgenv().MoveAround and not MoveLoop then
        startMoveLoop()
    elseif not getgenv().MoveAround and MoveLoop then
        -- Khi MoveAround bị tắt, hủy thread MoveLoop
        task.cancel(MoveLoop)
        MoveLoop = nil
    elseif getgenv().MoveAround and MoveLoop and currentCharacter ~= LastCharacter then
        LastCharacter = currentCharacter -- Cập nhật nhân vật mới
        task.wait(4) -- Chờ 4 giây sau khi hồi sinh

        if MoveLoop then -- Kiểm tra kỹ xem MoveLoop có còn tồn tại không trước khi hủy
            task.cancel(MoveLoop) -- Hủy thread MoveLoop hiện tại
            MoveLoop = nil
        end

        task.wait(2) -- Chờ một chút để đảm bảo toggle tắt
        if getgenv().MoveAround then -- Đảm bảo MoveAround vẫn đang bật
            startMoveLoop()
        end
    end
end)



--// Update Labels / Dropdowns \\--
spawn(function()
    while task.wait(4) do
        updateLabels()
    end
end)

local VirtualUser = game:GetService("VirtualUser")
local Players = game:GetService("Players")

-- Hàm tạo thời gian random kiểu tự nhiên, có lúc nhanh lúc chậm
local function naturalWaitTime()
    local baseTime = 600 -- 10 phút
    local offset = math.random(-120, 180) -- lệch ngẫu nhiên từ -2 phút đến +3 phút
    return math.max(300, baseTime + offset) -- đảm bảo tối thiểu 5 phút
end

spawn(function()
    while true do
        wait(naturalWaitTime()) 
        if Players.LocalPlayer and Players.LocalPlayer.Character then
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new(math.random(100, 1820), math.random(100, 980))) 
        end
    end
end)

--Nhặt Hoa--
spawn(function()
    while true do
        wait(naturalWaitTime()) 
        if Players.LocalPlayer and Players.LocalPlayer.Character then
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new(math.random(100, 1820), math.random(100, 980))) 
        end
    end
end)

local TweenService = game:GetService("TweenService")
local flowers = game:GetService("Workspace"):WaitForChild("Demon_Flowers_Spawn")
local Player = game.Players.LocalPlayer

local AutoCollectLilys = false
local failedFlowers = {}
local collectingThread = nil

local function isCharacterValid()
    local character = Player.Character
    return character and character.Parent and character:FindFirstChild("HumanoidRootPart")
end

local function fireproximityprompt(prompt)
    if prompt then
        prompt.HoldDuration = 0
        prompt:InputHoldBegin()
        task.wait(0.5)
        prompt:InputHoldEnd()
    end
end

local function TweenToPosition(pos, speed)
    local hrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil, 0 end

    -- Kiểm tra vị trí hợp lệ trước khi tạo Tween
    if not pos or pos.Y < -500 or pos.Magnitude > 10000 then
        return nil, 0
    end

    local distance = (hrp.Position - pos).Magnitude
    local tweenInfo = TweenInfo.new(distance / speed, Enum.EasingStyle.Linear)

    -- Hủy Tween cũ trước khi tạo mới
    if getgenv().currentTween then
        getgenv().currentTween:Cancel()
    end

    local tween = TweenService:Create(hrp, tweenInfo, {CFrame = CFrame.new(pos)})
    getgenv().currentTween = tween

    tween:Play()
    return tween, distance / speed
end

local function getFlowerPosition(flower)
    if not flower or not flower.Parent then return nil end
    local success, pos = pcall(function() return flower:GetPivot().Position end)

    -- Kiểm tra xem pos có hợp lệ không trước khi trả về
    if success and pos and pos.Y > -500 and pos.Magnitude < 10000 then
        return pos
    end
    return nil
end

local function getNearestFlower()
    local hrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return nil end

    local nearest, minDist = nil, math.huge
    for _, flower in pairs(flowers:GetChildren()) do
        if flower:IsA("Model") and flower.Parent and (not failedFlowers[flower] or tick() - failedFlowers[flower] > 30) then
            local pos = getFlowerPosition(flower)
            if pos then
                local dist = (hrp.Position - pos).Magnitude
                if dist < minDist then
                    nearest, minDist = flower, dist
                end
            end
        end
    end
    return nearest
end

local function safeMoveToFlower(flower)
    if not flower or not flower.Parent then return false end

    local position = getFlowerPosition(flower)
    if not position then return false end

    local attempts = 0
    while attempts < 3 do
        local tween, duration = TweenToPosition(position, 200)
        if not tween then return false end

        local start = tick()
        while tick() - start < duration + 1 do
            task.wait()

            if not isCharacterValid() or not flower.Parent or not AutoCollectLilys then
                tween:Cancel()
                return false
            end

            if tween.PlaybackState ~= Enum.PlaybackState.Playing then 
                break 
            end
        end

        tween:Cancel()
        
        -- Reset vận tốc để tránh bay ra ngoài map
        if isCharacterValid() then
            local hrp = Player.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                hrp.Velocity, hrp.AssemblyLinearVelocity = Vector3.zero, Vector3.zero
            end
        end

        if isCharacterValid() then
            return true
        end

        attempts = attempts + 1
        task.wait(0.2)
    end

    return false
end

local function tryCollectFlower(flower)
    if not flower or not flower:IsA("Model") or not flower.Parent then 
        return false
    end

    local prompt = nil
    for _, obj in ipairs(flower:GetDescendants()) do
        if obj:IsA("ProximityPrompt") then
            prompt = obj
            break
        end
    end

    if not prompt then
        return false
    end

    local hrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")
    if not hrp then return false end

    local position = getFlowerPosition(flower)
    if not position or (hrp.Position - position).Magnitude > 5 then
        return false
    end

    prompt.HoldDuration = 0
    prompt.MaxActivationDistance = 10
    
    task.wait(0.5)
    for i = 1, 3 do
        fireproximityprompt(prompt)
        task.wait(0.3)
        if not flower.Parent then 
            return true 
        end
    end

    task.wait(0.5)
    if not flower.Parent then
        return true
    end

    return false
end

local function startCollecting()
    if collectingThread then return end

    AutoCollectLilys = true

    collectingThread = task.spawn(function()
        while AutoCollectLilys do
            if not isCharacterValid() then repeat task.wait(1) until isCharacterValid() end

            for flower, lastFail in pairs(failedFlowers) do
                if not flower.Parent or tick() - lastFail > 30 then
                    failedFlowers[flower] = nil
                end
            end

            local flower = getNearestFlower()
            if not flower then
                task.wait(0.2)
                continue
            end

            if safeMoveToFlower(flower) and tryCollectFlower(flower) then
                failedFlowers[flower] = nil
            else
                failedFlowers[flower] = tick()
            end

            task.wait(0.2)
        end
        collectingThread = nil
    end)
end

local function stopCollecting()
    AutoCollectLilys = false
    if collectingThread then
        task.cancel(collectingThread)
        collectingThread = nil
    end

    -- Hủy Tween hiện tại để tránh lỗi
    if getgenv().currentTween then
        getgenv().currentTween:Cancel()
        getgenv().currentTween = nil
    end

    local hrp = Player.Character and Player.Character:FindFirstChild("HumanoidRootPart")

    if hrp then
        hrp.Velocity, hrp.AssemblyLinearVelocity = Vector3.zero, Vector3.zero
        -- Reset vị trí nếu bị bay ra ngoài map
        if hrp.Position.Y < -500 then
            hrp.CFrame = CFrame.new(workspace.SpawnLocation.Position + Vector3.new(0, 5, 0))
        end
    end
end

MiscSection:AddToggle({
    Name = "Auto Collect Lilys",
    Flag = "CollectAllLilys",
    Keybind = false,
    Callback = function(v)
        if v then startCollecting() else stopCollecting() end
    end
})

--FindMuzan--
local TweenService = game:GetService("TweenService")
local TweenSpeed = 250 -- Điều chỉnh tốc độ teleport

local function teleportToMuzan()
    task.spawn(function()
        local players = game:GetService("Players")
        local localPlayer = players.LocalPlayer
        local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
        local hrp = character:WaitForChild("HumanoidRootPart")

        local function getMuzanSpawnPos()
            local muzan = workspace:FindFirstChild("Muzan")
            if muzan and muzan:FindFirstChild("SpawnPos") then
                return muzan.SpawnPos.Value
            end
            return nil
        end

        local muzanPos = getMuzanSpawnPos()
        if muzanPos then
            local offset = Vector3.new(10, 5, 0)
            local targetPos = muzanPos + offset

            -- Tính khoảng cách và dùng TweenService để teleport mượt
            local Magnitude = (hrp.Position - targetPos).Magnitude
            if Magnitude then
                local Cur = TweenService:Create(hrp, TweenInfo.new(Magnitude / TweenSpeed, Enum.EasingStyle.Linear), {CFrame = CFrame.new(targetPos)})
                Cur:Play()
                Cur.Completed:Wait() -- Đợi teleport hoàn tất trước khi tiếp tục
            end
        end
    end)
end

MiscSection:AddToggle({
    Name = "Auto Teleport to Muzan",
    Flag = "AutoTPMuzan",
    Callback = function(state)
        if state then
            teleportToMuzan()
        end
    end
})
